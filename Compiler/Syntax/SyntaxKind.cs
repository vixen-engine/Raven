namespace Vixen.Raven.Syntax;

public enum SyntaxKind : ushort {
    None,
    IdentifierName,
    ListKind,
    GlobalKeyword,
    IdentifierToken,
    QualifiedName,
    DiscardPattern,
    CompilationUnit,
    PackageDirective,
    ImportDirective,
    NameColon,
    ExpressionColon,
    NameEquals,
    AttributeArgument,
    Attribute,
    AttributeArgumentList,
    AttributeTargetSpecifier,
    AttributeList,
    GenericName,
    TypeArgumentList,
    AliasQualifiedName,
    PredefinedType,
    BoolKeyword,
    ByteKeyword,
    SByteKeyword,
    IntKeyword,
    UIntKeyword,
    ShortKeyword,
    UShortKeyword,
    LongKeyword,
    ULongKeyword,
    FloatKeyword,
    DoubleKeyword,
    StringKeyword,
    CharKeyword,
    ObjectKeyword,
    SimpleBaseType,
    PrimaryConstructorBaseType,
    ArgumentList,
    BracketedArgumentList,
    Argument,
    RefKeyword,
    OutKeyword,
    InKeyword,
    EqualsValueClause,
    // ArgListKeyword
    Parameter,
    ParameterList,
    BracketedParameterList,
    AbstractKeyword,
    ConstKeyword,
    OverrideKeyword,
    PartialKeyword,
    PrivateKeyword,
    ProtectedKeyword,
    PublicKeyword,
    ReadOnlyKeyword,
    StaticKeyword,
    VirtualKeyword,
    SelfExpression,
    BaseExpression,
    WhenClause,
    Block,
    BreakStatement,
    ContinueStatement,
    RepeatStatement,
    EmptyStatement,
    ExpressionStatement,
    ForStatement,
    IfStatement,
    ElseClause,
    ReturnStatement,
    LocalFunctionStatement,
    UsingKeyword,
    LocalDeclarationStatement,
    WhileStatement,
    UsingStatement,
    SwitchStatement,
    SwitchSection,
    // CaseKeyword,
    CasePatternSwitchLabel,
    CaseSwitchLabel,
    DefaultSwitchLabel,
    VariableDeclaration,
    ConstDeclaration,
    ArrowExpressionClause,
    FieldDeclaration,
    BaseConstructorInitializer,
    SelfConstructorInitializer,
    ExplicitInterfaceSpecifier,
    TypeParameter,
    BaseList,
    ExpressionElement,
    SpreadElement,
    UnaryPlusExpression,
    UnaryMinusExpression,
    BitwiseNotExpression,
    LogicalNotExpression,
    PreIncrementExpression,
    PreDecrementExpression,
    IndexExpression,
    PostIncrementExpression,
    PostDecrementExpression,
    SuppressNullableWarningExpression,
    ParenthesizedExpression,
    MemberBindingExpression,
    EqualsRelationalPattern,
    NotEqualsRelationalPattern,
    LessThanRelationalPattern,
    LessThanEqualsRelationalPattern,
    GreaterThanRelationalPattern,
    GreaterThanEqualsRelationalPattern,
    TypeOfExpression,
    SizeOfExpression,
    DefaultExpression,
    ClassConstraint,
    StructConstraint,
    QuestionToken,
    ConstructorConstraint,
    IsPatternExpression,
    TypeConstraint,
    DefaultConstraint,
    CastExpression,
    AnonymousObjectMemberDeclarator,
    ArrayType,
    ArrayRankSpecifier,
    NullableType,
    TupleElement,
    TupleType,
    DiscardDesignation,
    
}


static class SyntaxKindExtensions {
    internal static SyntaxToken AsToken(this SyntaxKind kind) => new(kind);
}


// TODO
public partial class TypeParameterListSyntax : SyntaxToken {
    internal TypeParameterListSyntax(SyntaxKind kind) : base(kind) { }
}

public partial class TypeParameterConstraintClauseSyntax : SyntaxToken {
    internal TypeParameterConstraintClauseSyntax(SyntaxKind kind) : base(kind) { }
}